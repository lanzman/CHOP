{
    "collab_server" : "",
    "contents" : "#load packages\nlibrary(readr)\nlibrary(dplyr)\n\n#set working directory to be location of all data files\nsetwd(\"C:/Users/mlanza/Desktop/master/master\")\n\n#pull in all fullfilenames in working directory\nfullfilenames <- list.files(pattern=\"*.csv\")\n\n#filenames minus extension\ndatanames <- tools::file_path_sans_ext(fullfilenames)\n\n#creates lists of all data by reading all files in folder\nmydata <- lapply(fullfilenames, read_csv)\n\n#loop to assign variables to all datasets and gives names to each dataset in list for subsetting and prints out data\nfor (i in 1:length(mydata)){\n  assign(datanames[i],mydata[[i]])\n  names(mydata)[i] <- datanames[i]\n}\n\n#Get info on the visit table\nstr(visit)\n\n#Part 1\n#Find patients where visit is a hospital encounter, after August 1, 2014, Age is greater than or equal 1 and less than or equal to 18\nhospitalencounters <- visit %>%\n                        filter(DICT_ENC_TYPE_KEY == 83 & HOSP_ADMIT_DT > '2014-08-01 00:00:00' & AGE >= 1.0 & AGE <=18.0)\n\n#View diagnosis info\nstr(diagnosis)\n\n#Set up list of ICD9 Codes for reference to anaphylaxis or allergic reaction\nICD9codes <- list('995.0','995.3','995.6','995.60','995.61','995.62','995.63','995.64','995.65','995.66','995.67','995.68','995.69','995.7','999.4','999.41','999.42','999.49')\n\n#Find all diagnosis that are anaphylaxis from the ICD9codes\nanaphylaxisdiagnosis <- diagnosis %>%\n                            filter(ICD9_CD %in% ICD9codes)\n\n#Find all ED Primary and Secondary diagnosis visits and all anaphylaxis diagnosis visits\nanaphylaxisvisitdiagnosis <- visit_diagnosis %>%\n                                      filter(DICT_DX_STS_KEY == 313 | DICT_DX_STS_KEY == 314) %>%\n                                      merge(anaphylaxisdiagnosis, by = 'DX_KEY')\n\n#removes all Urgent Care departments from Hospitalencounters and stores DEPT_KEYs\nnonurgentdepts = department %>% \n                      filter(!grepl('urgent', department$SPECIALTY, ignore.case = TRUE))\n\n#merge dataframes to find which hospital visits are for anaphylaxis and filter out non urgent departments\ncohort <- merge(hospitalencounters, anaphylaxisvisitdiagnosis, by = c('VISIT_KEY', 'PAT_KEY'), suffixes= c('_hospital', '_visit')) %>%\n                          filter(DEPT_KEY %in% nonurgentdepts$DEPT_KEY)\n\n#Part 2, create additional features\n\n#create anaphylaxis patient\nanaphylaxispatient <- cohort %>%\n                        filter(grepl('anaphylaxis', cohort$DX_NM, ignore.case = TRUE)) %>%\n                        subset(select = c('VISIT_KEY','PAT_KEY'))\n\n#create ANAPH_DX_IND indicator based on anaphylaxis patient\ncohort$ANAPH_DX_IND <- as.numeric(cohort$VISIT_KEY %in% anaphylaxispatient$VISIT_KEY , cohort$PAT_KEY %in% anaphylaxispatient$PAT_KEY )\n\n\n#merge medication order into cohort\n#Find medication orders where epinephrine was ordered\nepinephrineorder = medication_order %>%\n                            filter(grepl('epinephrine', medication_order$MED_ORD_NM, ignore.case = TRUE)) %>%\n                            subset(select = c('VISIT_KEY','PAT_KEY'))\n\n#create EPI_ORDER_IND: finds where Visit_KEY and PAT_KEY from epinephrineorder matches in cohort and applies a 1 to all rows of that visit\ncohort$EPI_ORDER_IND <- as.numeric(cohort$VISIT_KEY %in% epinephrineorder$VISIT_KEY , cohort$PAT_KEY %in% epinephrineorder$PAT_KEY )\n\n#creates outpatientvisit dataframe of patients in cohort\noutpatientvisit <- visit %>%\n                      filter(DICT_ENC_TYPE_KEY == 108, PAT_KEY %in% cohort$PAT_KEY)\n\n#merges cohort visits with outpatient visits and looks at outpatient visits that occured after a hospital visit\nhospoutvisit <- merge(subset(cohort, select=c('VISIT_KEY', 'PAT_KEY', 'HOSP_DISCHRG_DT')),subset(outpatientvisit, select=c('VISIT_KEY', 'PAT_KEY', 'APPT_CHECKIN_DT')), by = 'PAT_KEY', suffixes= c('_HOSP', '_OUTP')) %>%\n                  filter(HOSP_DISCHRG_DT < APPT_CHECKIN_DT)\n\n#computes the amount of days between the hospital visit and outpatient visit\nhospoutvisit$VISIT_DIFF_DAYS <- as.Date(hospoutvisit$APPT_CHECKIN_DT)-as.Date(hospoutvisit$HOSP_DISCHRG_DT)\n\n#creates immediate hosoutvisit to filter out all visits that are not less than or equal to 7 days\nimmhospoutvisit <- hospoutvisit %>%\n                    filter(hospoutvisit$VISIT_DIFF_DAYS <= 7)\n\n#create FOLLOW_UP_IND: finds where Visit_KEY and PAT_KEY from hospoutvisit matches in cohort and applies a 1 to all rows of that visit\ncohort$FOLLOW_UP_IND <- as.numeric(cohort$VISIT_KEY %in% immhospoutvisit$VISIT_KEY_HOSP , cohort$PAT_KEY %in% immhospoutvisit$PAT_KEY )\n\n#Find the min date of the outpatient visits that occured within 7 days of a hospital visit\nmindate <- immhospoutvisit %>% \n                    group_by(PAT_KEY, VISIT_KEY_HOSP) %>%\n                    summarise(FOLLOW_UP_DATE = min(APPT_CHECKIN_DT))\n\n#Merges the cohort with the mindate, fills in na where not found\ncohort <- merge(cohort, mindate, by.y = c('PAT_KEY', 'VISIT_KEY_HOSP'), by.x = c('PAT_KEY', 'VISIT_KEY'), all.x = TRUE)\n\n#Number of days between hospital visit and first outpatient visit\nmindays <- hospoutvisit %>% \n                  group_by(PAT_KEY, VISIT_KEY_HOSP) %>%\n                  summarise(DAYS_TO_FOLLOW_UP = min(VISIT_DIFF_DAYS))\n\n#Merges the cohort with the mindays, fills in na where not found\ncohort <- merge(cohort, mindays, by.y = c('PAT_KEY', 'VISIT_KEY_HOSP'), by.x = c('PAT_KEY', 'VISIT_KEY'), all.x = TRUE)\n\n#finalize cohort structure and remove duplicates\ncohort <- unique(cohort[c('PAT_KEY', 'VISIT_KEY', 'HOSP_ADMIT_DT', 'AGE', 'ANAPH_DX_IND', 'EPI_ORDER_IND', 'FOLLOW_UP_IND', 'FOLLOW_UP_DATE', 'DAYS_TO_FOLLOW_UP')])\n\n#write to csv file\nwrite.csv(cohort, 'Data Analyst Cohort R.csv')\n",
    "created" : 1504969237643.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2449023729",
    "id" : "CDE20899",
    "lastKnownWriteTime" : 1504969323,
    "last_content_update" : 1504969323758,
    "path" : "~/Data Science/CHOP/R/Healthcare Data AnalystR.R",
    "project_path" : "Healthcare Data AnalystR.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}